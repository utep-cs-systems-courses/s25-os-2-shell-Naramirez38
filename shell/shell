#! /usr/bin/env python3
import os, sys, re, time

def pipe(cmds):
    cmd1 = cmds[0:cmds.index('|')]
    cmd2 = cmds[cmd.index('|')+1:]
    r,w = os.pipe()
    os.set_inheritable(w,True)
    os.set_inheritable(r,True)

    rc = os.fork()

    if rc < 0:
        sys.exit(1)
    elif rc == 0:
        os.close(1)
        os.dup2(w,1)
        os.set_inheritable(1,True)

        for fildesc in (r,w):
            os.close(fildesc)
        runPr(cmd1)
    else:
        os.wait()
        rc = os.fork()
        os.close()

def rdonly(fildesc):
    os.close(0)
    fdindex = fildesc.index('<')
    os.open(fildesc[fdindex+1], os.O_RDONLY)
    os.set_inheritable(0, True)
    del(fildesc[fdindex:fdindex+2])
    return fildesc
    
def wronly(fildesc):    
    os.close(1)
    fdindex = fildesc.index('>')
    os.open(fildesc[fdindex+1], os.O_CREAT | os.O_WRONLY)
    os.set_inheritable(1, True)
    del(fildesc[fdindex:fdindex+2])
    return fildesc

def redir(fdchange):
    if '<' in fdchange:
        rdonly(fdchange)
    if '>' in fdchange:
        wronly(fdchange)
    return fdchange
    
def runPr(cmd):
    for path in re.split(":", os.environ['PATH']):
        program = os.path.join(path, cmd[0])
        try:
            os.execve(program, cmd, os.environ)
        except FileNotFoundError:
            pass

    os.write(2,("Command : '%s' is not recognized an internal or external command\n" % cmd[0]).encode())
    sys.exit(1)
    
def changedir(pathName):
    try:
        os.chdir(pathName)
    except FileNotFoundError:
        os.write(1, f" file {pathName} not found \n".encode())

def crPr(cmd):
    rc = os.fork()
    if rc < 0:
        sys.exit(1)
    elif rc == 0:
        if('>' or '<' in cmd):
            redir(cmd)
        runPr(cmd)
    else:
        os.wait()
        
def main():
    sys.stdout.write(" >& ")
    sys.stdout.flush()
    ibuf = os.read(0,100)

    while len(ibuf):
        #os.write(1, (os.environ["PS1"]).encode())
        os.write(1, "\n".encode())
        sbuf = ibuf.decode().split()
        sbuffer = ""
        p0sbuf = ""

        if len(sbuf) > 0:
            p0sbuf = sbuf[0]

        if p0sbuf == "cd" and len(sbuf) == 2: # handles switching directories
            changedir(sbuf[1])
            os.write(1, (os.getcwd()).encode())
        elif p0sbuf == "pwd": # handles printing pwd
            os.write(1,(os.getcwd()).encode())
        elif p0sbuf == "exit": #handles leaving the shell
            os.write(1,f"Youre out of here\n".encode())
            sys.exit(1)
        else:
            crPr(sbuf)
        sys.stdout.write(" &> ")
        sys.stdout.flush()
        ibuf = os.read(0, 100)
main()
